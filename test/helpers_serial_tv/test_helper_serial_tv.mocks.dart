// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/helpers_serial_tv/test_helper_serial_tv.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i17;
import 'dart:typed_data' as _i18;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/data/datasources_serial_tv/db_serial_tv/database_helper_serial_tv.dart'
    as _i15;
import 'package:ditonton/data/datasources_serial_tv/serial_tv_local_data_source.dart'
    as _i12;
import 'package:ditonton/data/datasources_serial_tv/serial_tv_remote_data_source.dart'
    as _i10;
import 'package:ditonton/data/models_serial_tv/model_serial_tv.dart' as _i11;
import 'package:ditonton/data/models_serial_tv/serial_tv_detail.dart' as _i3;
import 'package:ditonton/data/models_serial_tv/serial_tv_table.dart' as _i13;
import 'package:ditonton/domain/entities_serial_tv/serial_tv.dart' as _i8;
import 'package:ditonton/domain/entities_serial_tv/serial_tv_detail.dart'
    as _i9;
import 'package:ditonton/domain/repositories_serial_tv/serial_tv_repository.dart'
    as _i5;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:sqflite/sqflite.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSerialTvDetailResponse_1 extends _i1.SmartFake
    implements _i3.SerialTvDetailResponse {
  _FakeSerialTvDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SerialTvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSerialTvRepository extends _i1.Mock
    implements _i5.SerialTvRepository {
  MockSerialTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>
      getNowPlayingSerialTv() => (super.noSuchMethod(
            Invocation.method(
              #getNowPlayingSerialTv,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
              this,
              Invocation.method(
                #getNowPlayingSerialTv,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>
      getPopularSerialTv() => (super.noSuchMethod(
            Invocation.method(
              #getPopularSerialTv,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
              this,
              Invocation.method(
                #getPopularSerialTv,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>
      getTopRatedSerialTv() => (super.noSuchMethod(
            Invocation.method(
              #getTopRatedSerialTv,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
              this,
              Invocation.method(
                #getTopRatedSerialTv,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.SerialTvDetail>> getSerialTvDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSerialTvDetail,
          [id],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, _i9.SerialTvDetail>>.value(
                _FakeEither_0<_i7.Failure, _i9.SerialTvDetail>(
          this,
          Invocation.method(
            #getSerialTvDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i9.SerialTvDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>
      getSerialTvRecommendations(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getSerialTvRecommendations,
              [id],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
              this,
              Invocation.method(
                #getSerialTvRecommendations,
                [id],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlistSerialTv(
          _i9.SerialTvDetail? serialTvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistSerialTv,
          [serialTvDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistSerialTv,
            [serialTvDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlistSerialTv(
          _i9.SerialTvDetail? serialTvDetail) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistSerialTv,
          [serialTvDetail],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
            _FakeEither_0<_i7.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistSerialTv,
            [serialTvDetail],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlistSerialTv(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlistSerialTv,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>
      getWatchlistSerialTv() => (super.noSuchMethod(
            Invocation.method(
              #getWatchlistSerialTv,
              [],
            ),
            returnValue:
                _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                    _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
              this,
              Invocation.method(
                #getWatchlistSerialTv,
                [],
              ),
            )),
          ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>> searchSerialTv(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSerialTv,
          [query],
        ),
        returnValue:
            _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>.value(
                _FakeEither_0<_i7.Failure, List<_i8.SerialTv>>(
          this,
          Invocation.method(
            #searchSerialTv,
            [query],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.SerialTv>>>);
}

/// A class which mocks [SerialTvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSerialTvRemoteDataSource extends _i1.Mock
    implements _i10.SerialTvRemoteDataSource {
  MockSerialTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i11.SerialTvModel>> getNowPlayingSerialTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingSerialTv,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.SerialTvModel>>.value(<_i11.SerialTvModel>[]),
      ) as _i6.Future<List<_i11.SerialTvModel>>);
  @override
  _i6.Future<List<_i11.SerialTvModel>> getPopularSerialTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularSerialTv,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.SerialTvModel>>.value(<_i11.SerialTvModel>[]),
      ) as _i6.Future<List<_i11.SerialTvModel>>);
  @override
  _i6.Future<List<_i11.SerialTvModel>> getTopRatedSerialTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedSerialTv,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.SerialTvModel>>.value(<_i11.SerialTvModel>[]),
      ) as _i6.Future<List<_i11.SerialTvModel>>);
  @override
  _i6.Future<_i3.SerialTvDetailResponse> getSerialTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSerialTvDetail,
          [id],
        ),
        returnValue: _i6.Future<_i3.SerialTvDetailResponse>.value(
            _FakeSerialTvDetailResponse_1(
          this,
          Invocation.method(
            #getSerialTvDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.SerialTvDetailResponse>);
  @override
  _i6.Future<List<_i11.SerialTvModel>> getSerialTvRecomendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSerialTvRecomendations,
          [id],
        ),
        returnValue:
            _i6.Future<List<_i11.SerialTvModel>>.value(<_i11.SerialTvModel>[]),
      ) as _i6.Future<List<_i11.SerialTvModel>>);
  @override
  _i6.Future<List<_i11.SerialTvModel>> searchSerialTv(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchSerialTv,
          [query],
        ),
        returnValue:
            _i6.Future<List<_i11.SerialTvModel>>.value(<_i11.SerialTvModel>[]),
      ) as _i6.Future<List<_i11.SerialTvModel>>);
}

/// A class which mocks [SerialTvDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSerialTvDataSource extends _i1.Mock
    implements _i12.SerialTvDataSource {
  MockSerialTvDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlistSerialTv(
          _i13.SerialTvTable? serialTvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistSerialTv,
          [serialTvTable],
        ),
        returnValue: _i6.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #insertWatchlistSerialTv,
            [serialTvTable],
          ),
        )),
      ) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlistSerialTv(
          _i13.SerialTvTable? serialTvTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistSerialTv,
          [serialTvTable],
        ),
        returnValue: _i6.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #removeWatchlistSerialTv,
            [serialTvTable],
          ),
        )),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i13.SerialTvTable?> getSerialTvById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSerialTvById,
          [id],
        ),
        returnValue: _i6.Future<_i13.SerialTvTable?>.value(),
      ) as _i6.Future<_i13.SerialTvTable?>);
  @override
  _i6.Future<List<_i13.SerialTvTable>> getWatchlistSerialTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSerialTv,
          [],
        ),
        returnValue:
            _i6.Future<List<_i13.SerialTvTable>>.value(<_i13.SerialTvTable>[]),
      ) as _i6.Future<List<_i13.SerialTvTable>>);
}

/// A class which mocks [DatabaseHelperSerialTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelperSerialTv extends _i1.Mock
    implements _i15.DatabaseHelperSerialTv {
  MockDatabaseHelperSerialTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i16.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i6.Future<_i16.Database?>.value(),
      ) as _i6.Future<_i16.Database?>);
  @override
  _i6.Future<int> insertWatchlistSerialTv(_i13.SerialTvTable? serialtv) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlistSerialTv,
          [serialtv],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<int> removeWatchlistSerialTv(_i13.SerialTvTable? serialtv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistSerialTv,
          [serialtv],
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getSerialTvById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSerialTvById,
          [id],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistSerialTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistSerialTv,
          [],
        ),
        returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i17.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i18.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i6.Future<_i18.Uint8List>.value(_i18.Uint8List(0)),
      ) as _i6.Future<_i18.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i6.Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
